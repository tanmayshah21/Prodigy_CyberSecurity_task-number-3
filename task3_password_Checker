import re

common_words = set([
    "password", "123456", "123456789", "qwerty", "abc123", "football", "monkey", "letmein", "dragon", "111111",
    "baseball", "iloveyou", "master", "sunshine", "ashley", "bailey", "welcome", "shadow", "121212", "buster",
    "charlie", "michael", "superman", "batman", "spiderman", "starwars", "startrek", "hannah", "harrypotter", "matrix",
    "cookie", "pepper", "peanut", "butter", "chocolate", "coffee", "latte", "mocha", "espresso", "cappuccino"
])

def is_common_word(password):
    return password.lower() in common_words

def evaluate_password(password):
    length_ok = len(password) >= 8
    has_uppercase = re.search(r'[A-Z]', password) is not None
    has_lowercase = re.search(r'[a-z]', password) is not None
    has_number = re.search(r'[0-9]', password) is not None
    has_special_char = re.search(r'[\W_]', password) is not None
    not_common_word = not is_common_word(password)
    
    criteria_met = sum([
        length_ok, has_uppercase, has_lowercase, 
        has_number, has_special_char, not_common_word
    ])
    
    strength_percentage = (criteria_met / 6) * 100
    
    if strength_percentage == 100:
        strength = "Very Strong"
    elif strength_percentage >= 80:
        strength = "Strong"
    elif strength_percentage >= 60:
        strength = "Moderate"
    else:
        strength = "Weak"
    
    feedback = []
    if not length_ok:
        feedback.append("Password should be at least 8 characters long.")
    if not has_uppercase:
        feedback.append("Password should include at least one uppercase letter.")
    if not has_lowercase:
        feedback.append("Password should include at least one lowercase letter.")
    if not has_number:
        feedback.append("Password should include at least one number.")
    if not has_special_char:
        feedback.append("Password should include at least one special character.")
    if not not_common_word:
        feedback.append("Password should not be a common word.")
    
    return {
        "strength": strength,
        "percentage": strength_percentage,
        "feedback": feedback
    }

password = input("Enter a password to see how strong it is: ")
result = evaluate_password(password)

print(f"Password strength: {result['strength']}")
print(f"Password strength percentage: {result['percentage']}%")
for suggestion in result['feedback']:
    print(f"- {suggestion}")
